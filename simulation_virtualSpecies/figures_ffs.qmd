---
title: "figures_ffs"
format: 
  pdf:
    fig-width: 8
    fig-height: 9
editor: visual
execute:
  echo: false
  warning: false
editor_options: 
  chunk_output_type: console
---

```{r}

library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)

sim_files <- list.files("results/", pattern = "^ffs", full.names = TRUE) |> 
  lapply(read.csv)
sim_res <- do.call(rbind.data.frame, sim_files)

sim_diff <- data.frame(rmse_rand=sim_res$diff_CV_AOI_RMSE_rand,
                       rmse_spat=sim_res$diff_CV_AOI_RMSE_spat,
                       rmse_nndm=sim_res$diff_CV_AOI_RMSE_nndm,
                       rmse_kndm=sim_res$diff_CV_AOI_RMSE_kndm,
                       rmse_rand_inAOA=sim_res$diff_CV_AOA_RMSE_rand,
                       rmse_spat_inAOA=sim_res$diff_CV_AOA_RMSE_spat,
                       rmse_nndm_inAOA=sim_res$diff_CV_AOA_RMSE_nndm,
                       rmse_kndm_inAOA=sim_res$diff_CV_AOA_RMSE_kndm,
                       inAOA_rand=sim_res$in_AOA_rand,
                       inAOA_spat=sim_res$in_AOA_spat,
                       inAOA_nndm=sim_res$in_AOA_nndm,
                       inAOA_kndm=sim_res$in_AOA_kndm,
                       improvement_aoa_rand=sim_res$improvement_aoa_rand,
                       improvement_aoa_spat=sim_res$improvement_aoa_spat,
                       improvement_aoa_nndm=sim_res$improvement_aoa_nndm,
                       improvement_aoa_kndm=sim_res$improvement_aoa_kndm,
                       improvement_rmse_rand=sim_res$improvement_rmse_rand,
                       improvement_rmse_spat=sim_res$improvement_rmse_spat,
                       improvement_rmse_nndm=sim_res$improvement_rmse_nndm,
                       improvement_rmse_kndm=sim_res$improvement_rmse_kndm,
                       dsample=sim_res$dsample) |> 
  pivot_longer(!dsample) |>
  mutate(distr = case_when(dsample == "sregular" ~ "Strong\nregular",
                                     dsample == "wregular" ~ "Weak\nregular",
                                     dsample == "random" ~ "Random",
                                     dsample == "wclust" ~ "Weak\nclustered",
                                     dsample == "sclust" ~ "Strong\nclustered"),
         distr = as.factor(distr),
         distr = fct_relevel(distr, c("Strong\nregular", "Weak\nregular", "Random",
                                   "Weak\nclustered", "Strong\nclustered")),
         CV_method = case_when(grepl("rand", name) ~ "random 10-fold",
                               grepl("spat", name) ~ "spatial 10-fold",
                               grepl("nndm", name) ~ "NNDM LOO",
                               grepl("kndm", name) ~ "kNNDM 10-fold"),
         CV_method = fct_relevel(CV_method, "random 10-fold",  "spatial 10-fold","NNDM LOO","kNNDM 10-fold"))

```

# RMSE

```{r}

library(ggplot2)
library(ggthemes)
library(cowplot)

lw <- 0.6
w <- 0.45
#expression(paste(RMSE [CV] - RMSE [True], "for prediction area"))

base.size <- 15
diff_rmse <- ggplot(sim_diff[startsWith(sim_diff$name, "rmse") &
                                ! endsWith(sim_diff$name, "inAOA"),],
                          aes(x=distr, y=value,colour=CV_method)) +
    geom_boxplot(fill=NA, lwd=lw, width=w,position=position_dodge(0.6)) +
    scale_color_colorblind(name="CV method") +
  scale_y_continuous(limits=c(-0.15,0.05)) +
    geom_hline(aes(yintercept=0)) +
    xlab("") +
    ylab(expression(CV - true~RMSE)) +
    theme_bw(base_size = base.size) +
    theme(legend.position = "None")

diff_rmse_inAOA <- ggplot(sim_diff[startsWith(sim_diff$name, "rmse") &
                                endsWith(sim_diff$name, "inAOA"),],
                          aes(x=distr, y=value,colour=CV_method)) +
    geom_boxplot(fill=NA, lwd=lw, width=w,position=position_dodge(0.6)) +
    scale_color_colorblind(name="CV method") +
  scale_y_continuous(limits=c(-0.15,0.05)) +
    geom_hline(aes(yintercept=0)) +
    xlab("") +
    ylab(expression(CV - true~RMSE ~ inside ~ AOA)) +
    theme_bw(base_size = base.size) +
    theme(legend.position = "None")

in_aoa <- ggplot(sim_diff[startsWith(sim_diff$name, "inAOA"),],
                          aes(x=distr, y=value,colour=CV_method)) +
    geom_boxplot(fill=NA, lwd=lw, width=w,position=position_dodge(0.6)) +
    scale_color_colorblind(name="CV method") +
    geom_hline(aes(yintercept=100)) +
    xlab("") +
    ylab("cells inside AOA [%]") +
    theme_bw(base_size = base.size) +
    theme(legend.position = "None")

legend_right <- get_legend(diff_rmse +
                              guides(color = guide_legend(nrow = 4)) +
                              theme(legend.position = "right"))

pg <- plot_grid(diff_rmse, NULL, NULL, NULL,  
                 diff_rmse_inAOA, legend_right, NULL, NULL,  
                 in_aoa, NULL,NULL, NULL, 
                 nrow=3, rel_widths = c(1, 0.3, 0.3,-0.3), axis="l", align = "v")

pg

#ggsave("figures/rmse_aoa.pdf", pg, height=9, width=8)

```

# ffs

```{r}
library(ggplot2)
library(ggthemes)
library(cowplot)


n_total = 47

xy_as_pred <- data.frame(dsample=sim_res$dsample,
                         xy_as_predictor_rand=sim_res$xy_as_predictor_rand,
                         xy_as_predictor_spat=sim_res$xy_as_predictor_spat,
                         xy_as_predictor_nndm=sim_res$xy_as_predictor_nndm,
                         xy_as_predictor_kndm=sim_res$xy_as_predictor_kndm)|> 
  pivot_longer(!dsample)|>
  mutate(distr = case_when(dsample == "sregular" ~ "Strong\nregular",
                                     dsample == "wregular" ~ "Weak\nregular",
                                     dsample == "random" ~ "Random",
                                     dsample == "wclust" ~ "Weak\nclustered",
                                     dsample == "sclust" ~ "Strong\nclustered"),
         distr = as.factor(distr),
         distr = fct_relevel(distr, c("Strong\nregular", "Weak\nregular", "Random",
                                   "Weak\nclustered", "Strong\nclustered")),
         CV_method = case_when(grepl("rand", name) ~ "random 10-fold",
                               grepl("spat", name) ~ "spatial 10-fold",
                               grepl("nndm", name) ~ "NNDM LOO",
                               grepl("kndm", name) ~ "kNNDM 10-fold"),
         CV_method = fct_relevel(CV_method, "random 10-fold",  "spatial 10-fold","NNDM LOO","kNNDM 10-fold")) |> 
  count(CV_method, distr,value) 

xy_as_pred$perc <- xy_as_pred$n / n_total * 100

lw <- 0.6
w <- 0.45
#expression(paste(RMSE [CV] - RMSE [True], "for prediction area"))

base.size <- 15
impr_aoa <- ggplot(sim_diff[startsWith(sim_diff$name, "improvement_aoa"),],
                          aes(x=distr, y=value,colour=CV_method)) +
    geom_boxplot(fill=NA, lwd=lw, width=w,position=position_dodge(0.6)) +
    scale_color_colorblind(name="CV method") +
  scale_y_continuous(limits=c(-25,25)) +
    geom_hline(aes(yintercept=0)) +
    xlab("") +
    ylab("improvement of AOA [%]") +
    theme_bw(base_size = base.size) +
    theme(legend.position = "None")

impr_rmse <- ggplot(sim_diff[startsWith(sim_diff$name, "improvement_rmse"),],
                          aes(x=distr, y=value,colour=CV_method)) +
    geom_boxplot(fill=NA, lwd=lw, width=w,position=position_dodge(0.6)) +
    scale_color_colorblind(name="CV method") +
  scale_y_continuous(limits=c(-40,20)) +
    geom_hline(aes(yintercept=0)) +
    xlab("") +
    ylab("improvement of RMSE [%]") +
    theme_bw(base_size = base.size) +
    theme(legend.position = "None")

aoa_ffs <- sim_diff[startsWith(sim_diff$name, "inAOA"),"value"] + sim_diff[startsWith(sim_diff$name, "improvement_aoa"),"value"]

aoa_ffs <- data.frame(dsample=c(sim_diff[startsWith(sim_diff$name, "inAOA"),"dsample"]),
           name=do.call(paste0, c(sim_diff[startsWith(sim_diff$name, "inAOA"),"name"], "_FFS")),
           value=aoa_ffs$value, 
           distr=c(sim_diff[startsWith(sim_diff$name, "inAOA"),"distr"]),
           CV_method=c(sim_diff[startsWith(sim_diff$name, "inAOA"),"CV_method"]))

sim_diff <- rbind(sim_diff, aoa_ffs)

xy_pr <- ggplot(xy_as_pred[xy_as_pred$value=="yes",],
                aes(x=distr, y=n,fill=CV_method)) +
    geom_bar(stat="identity", position=position_dodge(0.7), width = 0.55) +
    scale_fill_colorblind(name="CV method") +
    geom_hline(aes(yintercept=0)) +
    xlab("") +
    ylab("% using XY as predictor") +
    theme_bw(base_size = base.size) +
    theme(legend.position = "None")

in_aoa <- ggplot(sim_diff[startsWith(sim_diff$name, "inAOA") & endsWith(sim_diff$name, "FFS"),], aes(x=distr, y=value,colour=CV_method)) +
    geom_boxplot(fill=NA, lwd=lw, width=w,position=position_dodge(0.6)) +
    scale_color_colorblind(name="CV method") +
    geom_hline(aes(yintercept=100)) +
  scale_y_continuous(limits=c(0,100)) +
    xlab("") +
    ylab("cells inside AOA [%]") +
    theme_bw(base_size = base.size) +
    theme(legend.position = "None")

legend_right <- get_legend(impr_rmse +
                              guides(color = guide_legend(nrow = 4)) +
                              theme(legend.position = "right"))

pgr <- plot_grid(impr_aoa, NULL, NULL, NULL,  
                 impr_rmse, legend_right, NULL, NULL,  
                 xy_pr, NULL, NULL, NULL,
                 in_aoa, NULL, NULL, NULL,
                 nrow=4, rel_widths = c(1, 0.3, 0.3,-0.3), axis="l", align = "v")

pgr

#ggsave("figures/ffs_impr.pdf", pgr, height=12, width=8)

```
